Index: calc.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/calc.py b/calc.py
--- a/calc.py	
+++ b/calc.py	
@@ -11,7 +11,7 @@
     """Retorna lista com as coordenadas dos vértices da área a levantar.
        :P1...P4: pontos que devem ser abrangidos pela área a levantar Pi = (Pi_x, Pi_y)
     """
-    # Área a levantar (rectangular) definida por uma lista das coordenadas extremas dos quatro pontos (P1...P4) de
+    # Área a levantar (retangular) definida por uma lista das coordenadas extremas dos quatro pontos (P1...P4) de
     # modo a conter todos eles:
     #  
     #  area[0] .............. area[1]
@@ -19,10 +19,11 @@
     #  |                            |
     #  area[2] .............. area[3]
     #
-    area = [[min(P1[0], P2[0], P3[0], P4[0]), max(P1[1], P2[1], P3[1], P4[1])],
-            [max(P1[0], P2[0], P3[0], P4[0]), max(P1[1], P2[1], P3[1], P4[1])],
-            [max(P1[0], P2[0], P3[0], P4[0]), min(P1[1], P2[1], P3[1], P4[1])],
-            [min(P1[0], P2[0], P3[0], P4[0]), min(P1[1], P2[1], P3[1], P4[1])]]
+    area = []
+    area.append([min(P1[0], P2[0], P3[0], P4[0]), max(P1[1], P2[1], P3[1], P4[1])])
+    area.append([max(P1[0], P2[0], P3[0], P4[0]), max(P1[1], P2[1], P3[1], P4[1])])
+    area.append([max(P1[0], P2[0], P3[0], P4[0]), min(P1[1], P2[1], P3[1], P4[1])])
+    area.append([min(P1[0], P2[0], P3[0], P4[0]), min(P1[1], P2[1], P3[1], P4[1])])
 
     return area
 
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	
@@ -64,7 +64,7 @@
             fotos = calc.get_plan_fotos(area, orientation, cota_media, s1, s2, mf, pixel_size, focal_distance, l, q)
 
             budget_values = calc.get_plan_budget(unit_cost_foto, unit_cost_flight_hour, flight_speed, s1, s2,
-                                                 pixel_size, mf, q, l, area, fotos)
+                                                 pixel_size, mf, q, l, area)
 
             # Valores da distância total, tempo de voo e orçamento são arredondados a uma casa decimal:
 
